variables:
  BUILD_ENV: "pd-build-ui-backend-373"
  RUNNING_ENV: "pd-ci-ui-backend-373"
  PYTHON_PATH: "/D/Projects/PD/softwares/python/python-3.7.3"
  BASE_PYTHON_PATH: "D:/Projects/PD/softwares/python/python-3.7.3"
  VE_PATH: "${CI_BUILDS_DIR}/${RUNNING_ENV}/Scripts/activate.ps1"
  NSSM_PATH: "/D/Projects/PD/softwares/nssm/nssm-2.24/win64/nssm.exe"
  SERVICE_NAME: "pd-ci-ui-backend"
  PACKAGE: "pd-ui-backend"
#   GIT_CLONE_PATH: "${CI_BUILDS_DIR}/${PACKAGE}"
#   CI_DEBUG_TRACE: "false"


stages:
  - static_analysis
  - test
  - sonar-scan
  - build-dev
  - deploy-dev
  - build-test
  - deploy-test
  - build-svt
  - deploy-svt
  - build-uat
  - deploy-uat


default:
  before_script:
    - sh app/ci_scripts/create_venv.sh
    - . $VE_PATH


flake8:
  tags:
    - pd-dev-windows-ml01q
  stage: static_analysis
  script:
    - flake8 --ignore=E ui-backend
  allow_failure: true # Remove it, when ready
  only:
    refs:
      - develop
      - merge_requests
    variables: 
      - $ENVIRONMENT== "dev"    
  
unit-tests:
  tags:
      - pd-dev-windows-ml01q
  stage: test
  before_script:
    - . $VE_PATH
  script:
    
    - python -m pytest --cov=./ --cov-report xml -v --junitxml="test_results.xml"
  allow_failure: true # Remove it, when ready
  artifacts:
      paths:
      - test_results.xml
      - coverage.xml
  only:
    refs:
      - develop
      - merge_requests
    variables: 
      - $ENVIRONMENT== "dev"
      
Perform Sonarqube Analysis and quality gate:  # for all environments
  image: sonarsource/sonar-scanner-cli
  stage: sonar-scan
  only:
    - branches
    - tags
  before_script:
    - echo "Setting up for Sonarqube Analysis on PD $CI_COMMIT_REF_NAME branch"
    - apk upgrade --update-cache --available && apk add openssl
    - openssl s_client -connect   usadc-vspsq01.quintiles.net:443 | keytool -import -noprompt -alias sonarqbue_test -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit
  script:
    - echo "Running Sonarqube Analysis on $CI_COMMIT_REF_NAME branch"
    - apk upgrade --update-cache --available && apk add openssl
    - sh scripts/sonarqube.sh branch > /tmp/sonar.log
    - cat /tmp/sonar.log
    - echo "Running Sonarqube quality gate on $CI_COMMIT_REF_NAME branch"
    - sh scripts/qualitygate.sh
  allow_failure: true    
  tags:
    - ca2ugitla006p-D4
  only:
    refs:
      - develop
      - merge_requests
    variables: 
      - $ENVIRONMENT== "dev" 

build:
  tags:
    - pd-dev-windows-ml01q
  stage: build-dev
  before_script:
    - . $VE_PATH 
  script:
    - python setup.py sdist
  artifacts:
    paths:
      - dist/
  only:
    refs:
      - develop
      - merge_requests
    variables: 
      - $ENVIRONMENT== "dev"
  
deploy-dev1:
  tags:
    - pd-dev-windows-ml01q
  stage: deploy-dev
  variables:
    VERIFICATION_URL: "http://ca2spdml01q:8000/api/health/"  
  script:
    - sh app/ci_scripts/deploy.sh dist
  environment:
    name: dev
  only:
    refs:
      - develop
    variables: 
      - $ENVIRONMENT== "dev"

deploy-dev2:
  tags:
    - pd-dev-windows-ml06d
  stage: deploy-dev
  variables:
    VERIFICATION_URL: "http://ca2spdml06d:8000/api/health/"  
  script:
    - sh app/ci_scripts/deploy.sh dist
  environment:
    name: dev2
  only:
    refs:
      - develop
    variables: 
      - $ENVIRONMENT== "dev"
      
build-test:
  tags:
    - pd-test-windows-ml110q
  stage: build-test
  before_script:
    - . $VE_PATH 
  script:
    - python setup.py sdist
  artifacts:
    paths:
      - dist/
  only:
    refs:
      - develop
      - pd-release/1.3_qc
    variables: 
      - $ENVIRONMENT== "test"
  
deploy-test:
  tags:
    - pd-test-windows-ml110q
  stage: deploy-test
  variables:
    VERIFICATION_URL: "http://ca2spdml110q:8000/api/health/"  
  script:
    - sh app/ci_scripts/deploy.sh dist
  environment:
    name: test
  only:
    refs:
      - develop
      - pd-release/1.3_qc
    variables:
      - $ENVIRONMENT== "test"
      

build-svt:
  tags:
    - pd-svt-windows-ml13q
  stage: build-svt
  script:
    - python setup.py sdist
  artifacts:
    paths:
      - dist/
  only:
    refs:
      - master
      - pd-release/1.3_qc
    variables: 
      - $ENVIRONMENT== "svt"
      

      

deploy-svt:
  tags:
    - pd-svt-windows-ml13q
  stage: deploy-svt
  variables:
    VERIFICATION_URL: "http://ca2spdml13q:8000/api/health/"  
  script:
    - sh app/ci_scripts/deploy.sh dist
  environment:
    name: svt
  only:
    refs:
      - master
      - pd-release/1.3_qc
    variables: 
      - $ENVIRONMENT== "svt"

deploy-svt2:
  tags:
    - pd-svt-windows-ml16q
  stage: deploy-svt
  variables:
    VERIFICATION_URL: "http://ca2spdml16q:8000/api/health/"  
  script:
    - sh app/ci_scripts/deploy.sh dist
  environment:
    name: svt2
  only:
    refs:
      - master
      - pd-release/1.3_qc
    variables: 
      - $ENVIRONMENT== "svt"
      
build-uat:
  tags:
    - ca2spdml03c
  stage: build-uat
  before_script:
    - . $VE_PATH  
  script:
    - python setup.py sdist
  artifacts:
    paths:
      - dist/
  only:
    refs:
      
      - master
      - pd-release/1.3_qc
    variables: 
      - $ENVIRONMENT== "uat"

deploy-uat:
  tags:
    - ca2spdml03c
  stage: deploy-uat
  variables:
    VERIFICATION_URL: "http://ca2spdml03c:8000/api/health"
  script:
    - sh app/ci_scripts/deploy.sh dist
  environment:
    name: uat
  only:
    refs:
      
      - master
      - pd-release/1.3_qc
    variables: 
      - $ENVIRONMENT== "uat"
deploy-uat2:
  tags:
    - ca2spdml06c
  stage: deploy-uat
  variables:
    VERIFICATION_URL: "http://ca2spdml06c:8000/api/health"
  script:
    - sh app/ci_scripts/deploy.sh dist
  environment:
    name: uat2
  only:
    refs:
      
      - master
      - pd-release/1.3_qc
    variables: 
      - $ENVIRONMENT== "uat"
      

      
      

      
      
